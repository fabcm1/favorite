

  1) test GET /users/confirm renders the resend confirmation page (FavoriteWeb.UserConfirmationControllerTest)
     test/favorite_web/controllers/user_confirmation_controller_test.exs:13
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303423069@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_confirmation_controller_test.exs:9: FavoriteWeb.UserConfirmationControllerTest.__ex_unit_setup_1/1
       test/favorite_web/controllers/user_confirmation_controller_test.exs:1: FavoriteWeb.UserConfirmationControllerTest.__ex_unit__/2



  2) test POST /users/confirm/:token confirms the given token once (FavoriteWeb.UserConfirmationControllerTest)
     test/favorite_web/controllers/user_confirmation_controller_test.exs:70
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303423228@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_confirmation_controller_test.exs:9: FavoriteWeb.UserConfirmationControllerTest.__ex_unit_setup_1/1
       test/favorite_web/controllers/user_confirmation_controller_test.exs:1: FavoriteWeb.UserConfirmationControllerTest.__ex_unit__/2



  3) test POST /users/confirm does not send confirmation token if User is confirmed (FavoriteWeb.UserConfirmationControllerTest)
     test/favorite_web/controllers/user_confirmation_controller_test.exs:33
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303423196@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_confirmation_controller_test.exs:9: FavoriteWeb.UserConfirmationControllerTest.__ex_unit_setup_1/1
       test/favorite_web/controllers/user_confirmation_controller_test.exs:1: FavoriteWeb.UserConfirmationControllerTest.__ex_unit__/2



  4) test GET /users/confirm/:token renders the confirmation page (FavoriteWeb.UserConfirmationControllerTest)
     test/favorite_web/controllers/user_confirmation_controller_test.exs:59
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303423164@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_confirmation_controller_test.exs:9: FavoriteWeb.UserConfirmationControllerTest.__ex_unit_setup_1/1
       test/favorite_web/controllers/user_confirmation_controller_test.exs:1: FavoriteWeb.UserConfirmationControllerTest.__ex_unit__/2



  5) test POST /users/confirm does not send confirmation token if email is invalid (FavoriteWeb.UserConfirmationControllerTest)
     test/favorite_web/controllers/user_confirmation_controller_test.exs:46
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303423132@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_confirmation_controller_test.exs:9: FavoriteWeb.UserConfirmationControllerTest.__ex_unit_setup_1/1
       test/favorite_web/controllers/user_confirmation_controller_test.exs:1: FavoriteWeb.UserConfirmationControllerTest.__ex_unit__/2



  6) test fetch_current_user/2 authenticates user from cookies (FavoriteWeb.UserAuthTest)
     test/favorite_web/controllers/user_auth_test.exs:92
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303423260@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_auth_test.exs:16: FavoriteWeb.UserAuthTest.__ex_unit_setup_1/1
       test/favorite_web/controllers/user_auth_test.exs:1: FavoriteWeb.UserAuthTest.__ex_unit__/2



  7) test require_authenticated_user/2 stores the path to redirect to on GET (FavoriteWeb.UserAuthTest)
     test/favorite_web/controllers/user_auth_test.exs:138
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303423068@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_auth_test.exs:16: FavoriteWeb.UserAuthTest.__ex_unit_setup_1/1
       test/favorite_web/controllers/user_auth_test.exs:1: FavoriteWeb.UserAuthTest.__ex_unit__/2



  8) test POST /users/confirm sends a new confirmation token (FavoriteWeb.UserConfirmationControllerTest)
     test/favorite_web/controllers/user_confirmation_controller_test.exs:22
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303423100@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_confirmation_controller_test.exs:9: FavoriteWeb.UserConfirmationControllerTest.__ex_unit_setup_1/1
       test/favorite_web/controllers/user_confirmation_controller_test.exs:1: FavoriteWeb.UserConfirmationControllerTest.__ex_unit__/2



  9) test POST /users/confirm/:token does not confirm email with invalid token (FavoriteWeb.UserConfirmationControllerTest)
     test/favorite_web/controllers/user_confirmation_controller_test.exs:98
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303423036@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_confirmation_controller_test.exs:9: FavoriteWeb.UserConfirmationControllerTest.__ex_unit_setup_1/1
       test/favorite_web/controllers/user_confirmation_controller_test.exs:1: FavoriteWeb.UserConfirmationControllerTest.__ex_unit__/2



 10) test log_in_user/3 stores the user token in the session (FavoriteWeb.UserAuthTest)
     test/favorite_web/controllers/user_auth_test.exs:20
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303423004@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_auth_test.exs:16: FavoriteWeb.UserAuthTest.__ex_unit_setup_1/1
       test/favorite_web/controllers/user_auth_test.exs:1: FavoriteWeb.UserAuthTest.__ex_unit__/2



 11) test log_in_user/3 clears everything previously stored in the session (FavoriteWeb.UserAuthTest)
     test/favorite_web/controllers/user_auth_test.exs:28
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422972@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_auth_test.exs:16: FavoriteWeb.UserAuthTest.__ex_unit_setup_1/1
       test/favorite_web/controllers/user_auth_test.exs:1: FavoriteWeb.UserAuthTest.__ex_unit__/2



 12) test fetch_current_user/2 authenticates user from session (FavoriteWeb.UserAuthTest)
     test/favorite_web/controllers/user_auth_test.exs:86
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422940@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_auth_test.exs:16: FavoriteWeb.UserAuthTest.__ex_unit_setup_1/1
       test/favorite_web/controllers/user_auth_test.exs:1: FavoriteWeb.UserAuthTest.__ex_unit__/2



 13) test logout_user/1 works even if user is already logged out (FavoriteWeb.UserAuthTest)
     test/favorite_web/controllers/user_auth_test.exs:77
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422908@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_auth_test.exs:16: FavoriteWeb.UserAuthTest.__ex_unit_setup_1/1
       test/favorite_web/controllers/user_auth_test.exs:1: FavoriteWeb.UserAuthTest.__ex_unit__/2



 14) test redirect_if_user_is_authenticated/2 redirects if user is authenticated (FavoriteWeb.UserAuthTest)
     test/favorite_web/controllers/user_auth_test.exs:117
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422876@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_auth_test.exs:16: FavoriteWeb.UserAuthTest.__ex_unit_setup_1/1
       test/favorite_web/controllers/user_auth_test.exs:1: FavoriteWeb.UserAuthTest.__ex_unit__/2



 15) test log_in_user/3 redirects to the configured path (FavoriteWeb.UserAuthTest)
     test/favorite_web/controllers/user_auth_test.exs:33
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422844@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_auth_test.exs:16: FavoriteWeb.UserAuthTest.__ex_unit_setup_1/1
       test/favorite_web/controllers/user_auth_test.exs:1: FavoriteWeb.UserAuthTest.__ex_unit__/2



 16) test require_authenticated_user/2 redirects if user is not authenticated (FavoriteWeb.UserAuthTest)
     test/favorite_web/controllers/user_auth_test.exs:131
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422812@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_auth_test.exs:16: FavoriteWeb.UserAuthTest.__ex_unit_setup_1/1
       test/favorite_web/controllers/user_auth_test.exs:1: FavoriteWeb.UserAuthTest.__ex_unit__/2



 17) test redirect_if_user_is_authenticated/2 does not redirect if user is not authenticated (FavoriteWeb.UserAuthTest)
     test/favorite_web/controllers/user_auth_test.exs:123
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422780@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_auth_test.exs:16: FavoriteWeb.UserAuthTest.__ex_unit_setup_1/1
       test/favorite_web/controllers/user_auth_test.exs:1: FavoriteWeb.UserAuthTest.__ex_unit__/2



 18) test fetch_current_user/2 does not authenticate if data is missing (FavoriteWeb.UserAuthTest)
     test/favorite_web/controllers/user_auth_test.exs:108
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422748@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_auth_test.exs:16: FavoriteWeb.UserAuthTest.__ex_unit_setup_1/1
       test/favorite_web/controllers/user_auth_test.exs:1: FavoriteWeb.UserAuthTest.__ex_unit__/2



 19) test log_in_user/3 writes a cookie if remember_me is configured (FavoriteWeb.UserAuthTest)
     test/favorite_web/controllers/user_auth_test.exs:38
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422716@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_auth_test.exs:16: FavoriteWeb.UserAuthTest.__ex_unit_setup_1/1
       test/favorite_web/controllers/user_auth_test.exs:1: FavoriteWeb.UserAuthTest.__ex_unit__/2



 20) test logout_user/1 broadcasts to the given live_socket_id (FavoriteWeb.UserAuthTest)
     test/favorite_web/controllers/user_auth_test.exs:66
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422684@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_auth_test.exs:16: FavoriteWeb.UserAuthTest.__ex_unit_setup_1/1
       test/favorite_web/controllers/user_auth_test.exs:1: FavoriteWeb.UserAuthTest.__ex_unit__/2



 21) test require_authenticated_user/2 does not redirect if user is authenticated (FavoriteWeb.UserAuthTest)
     test/favorite_web/controllers/user_auth_test.exs:164
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422845@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_auth_test.exs:16: FavoriteWeb.UserAuthTest.__ex_unit_setup_1/1
       test/favorite_web/controllers/user_auth_test.exs:1: FavoriteWeb.UserAuthTest.__ex_unit__/2



 22) test logout_user/1 erases session and cookies (FavoriteWeb.UserAuthTest)
     test/favorite_web/controllers/user_auth_test.exs:49
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422652@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_auth_test.exs:16: FavoriteWeb.UserAuthTest.__ex_unit_setup_1/1
       test/favorite_web/controllers/user_auth_test.exs:1: FavoriteWeb.UserAuthTest.__ex_unit__/2



 23) test POST /users/reset_password sends a new reset password token (FavoriteWeb.UserResetPasswordControllerTest)
     test/favorite_web/controllers/user_reset_password_controller_test.exs:22
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422620@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_reset_password_controller_test.exs:9: FavoriteWeb.UserResetPasswordControllerTest.__ex_unit_setup_1/1
       test/favorite_web/controllers/user_reset_password_controller_test.exs:1: FavoriteWeb.UserResetPasswordControllerTest.__ex_unit__/2



 24) test PUT /users/reset_password/:token does not reset password on invalid data (FavoriteWeb.UserResetPasswordControllerTest)
     test/favorite_web/controllers/user_reset_password_controller_test.exs:92
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422588@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_reset_password_controller_test.exs:9: FavoriteWeb.UserResetPasswordControllerTest.__ex_unit_setup_1/1
       test/favorite_web/controllers/user_reset_password_controller_test.exs:1: FavoriteWeb.UserResetPasswordControllerTest.__ex_unit__/2



 25) test GET /users/reset_password renders the reset password page (FavoriteWeb.UserResetPasswordControllerTest)
     test/favorite_web/controllers/user_reset_password_controller_test.exs:13
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422556@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_reset_password_controller_test.exs:9: FavoriteWeb.UserResetPasswordControllerTest.__ex_unit_setup_1/1
       test/favorite_web/controllers/user_reset_password_controller_test.exs:1: FavoriteWeb.UserResetPasswordControllerTest.__ex_unit__/2



 26) test GET /users/reset_password/:token renders reset password (FavoriteWeb.UserResetPasswordControllerTest)
     test/favorite_web/controllers/user_reset_password_controller_test.exs:55
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422524@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_reset_password_controller_test.exs:9: FavoriteWeb.UserResetPasswordControllerTest.__ex_unit_setup_1/1
       test/favorite_web/controllers/user_reset_password_controller_test.exs:1: FavoriteWeb.UserResetPasswordControllerTest.__ex_unit__/2



 27) test PUT /users/reset_password/:token resets password once (FavoriteWeb.UserResetPasswordControllerTest)
     test/favorite_web/controllers/user_reset_password_controller_test.exs:77
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422492@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_reset_password_controller_test.exs:9: FavoriteWeb.UserResetPasswordControllerTest.__ex_unit_setup_1/1
       test/favorite_web/controllers/user_reset_password_controller_test.exs:1: FavoriteWeb.UserResetPasswordControllerTest.__ex_unit__/2



 28) test GET /users/reset_password/:token does not render reset password with invalid token (FavoriteWeb.UserResetPasswordControllerTest)
     test/favorite_web/controllers/user_reset_password_controller_test.exs:60
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422813@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_reset_password_controller_test.exs:9: FavoriteWeb.UserResetPasswordControllerTest.__ex_unit_setup_1/1
       test/favorite_web/controllers/user_reset_password_controller_test.exs:1: FavoriteWeb.UserResetPasswordControllerTest.__ex_unit__/2



 29) test POST /users/reset_password does not send reset password token if email is invalid (FavoriteWeb.UserResetPasswordControllerTest)
     test/favorite_web/controllers/user_reset_password_controller_test.exs:33
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422781@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_reset_password_controller_test.exs:9: FavoriteWeb.UserResetPasswordControllerTest.__ex_unit_setup_1/1
       test/favorite_web/controllers/user_reset_password_controller_test.exs:1: FavoriteWeb.UserResetPasswordControllerTest.__ex_unit__/2



 30) test PUT /users/reset_password/:token does not reset password with invalid token (FavoriteWeb.UserResetPasswordControllerTest)
     test/favorite_web/controllers/user_reset_password_controller_test.exs:107
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422717@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_reset_password_controller_test.exs:9: FavoriteWeb.UserResetPasswordControllerTest.__ex_unit_setup_1/1
       test/favorite_web/controllers/user_reset_password_controller_test.exs:1: FavoriteWeb.UserResetPasswordControllerTest.__ex_unit__/2



 31) test GET /users/log_in redirects if already logged in (FavoriteWeb.UserSessionControllerTest)
     test/favorite_web/controllers/user_session_controller_test.exs:19
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422460@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_session_controller_test.exs:7: FavoriteWeb.UserSessionControllerTest.__ex_unit_setup_1/1
       test/favorite_web/controllers/user_session_controller_test.exs:1: FavoriteWeb.UserSessionControllerTest.__ex_unit__/2



 32) test DELETE /users/log_out logs the user out (FavoriteWeb.UserSessionControllerTest)
     test/favorite_web/controllers/user_session_controller_test.exs:84
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422428@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_session_controller_test.exs:7: FavoriteWeb.UserSessionControllerTest.__ex_unit_setup_1/1
       test/favorite_web/controllers/user_session_controller_test.exs:1: FavoriteWeb.UserSessionControllerTest.__ex_unit__/2



 33) test GET /users/log_in renders log in page (FavoriteWeb.UserSessionControllerTest)
     test/favorite_web/controllers/user_session_controller_test.exs:11
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303423390@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_session_controller_test.exs:7: FavoriteWeb.UserSessionControllerTest.__ex_unit_setup_1/1
       test/favorite_web/controllers/user_session_controller_test.exs:1: FavoriteWeb.UserSessionControllerTest.__ex_unit__/2



 34) test POST /users/log_in logs the user in with remember me (FavoriteWeb.UserSessionControllerTest)
     test/favorite_web/controllers/user_session_controller_test.exs:43
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303423358@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_session_controller_test.exs:7: FavoriteWeb.UserSessionControllerTest.__ex_unit_setup_1/1
       test/favorite_web/controllers/user_session_controller_test.exs:1: FavoriteWeb.UserSessionControllerTest.__ex_unit__/2



 35) test POST /users/log_in emits error message with invalid credentials (FavoriteWeb.UserSessionControllerTest)
     test/favorite_web/controllers/user_session_controller_test.exs:71
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422396@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_session_controller_test.exs:7: FavoriteWeb.UserSessionControllerTest.__ex_unit_setup_1/1
       test/favorite_web/controllers/user_session_controller_test.exs:1: FavoriteWeb.UserSessionControllerTest.__ex_unit__/2



 36) test POST /users/log_in logs the user in with return to (FavoriteWeb.UserSessionControllerTest)
     test/favorite_web/controllers/user_session_controller_test.exs:57
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422364@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_session_controller_test.exs:7: FavoriteWeb.UserSessionControllerTest.__ex_unit_setup_1/1
       test/favorite_web/controllers/user_session_controller_test.exs:1: FavoriteWeb.UserSessionControllerTest.__ex_unit__/2



 37) test POST /users/log_in logs the user in (FavoriteWeb.UserSessionControllerTest)
     test/favorite_web/controllers/user_session_controller_test.exs:26
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422653@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_session_controller_test.exs:7: FavoriteWeb.UserSessionControllerTest.__ex_unit_setup_1/1
       test/favorite_web/controllers/user_session_controller_test.exs:1: FavoriteWeb.UserSessionControllerTest.__ex_unit__/2



 38) test DELETE /users/log_out succeeds even if the user is not logged in (FavoriteWeb.UserSessionControllerTest)
     test/favorite_web/controllers/user_session_controller_test.exs:91
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303423326@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_session_controller_test.exs:7: FavoriteWeb.UserSessionControllerTest.__ex_unit_setup_1/1
       test/favorite_web/controllers/user_session_controller_test.exs:1: FavoriteWeb.UserSessionControllerTest.__ex_unit__/2



 39) test PUT /users/settings (change password form) updates the user password and resets tokens (FavoriteWeb.UserSettingsControllerTest)
     test/favorite_web/controllers/user_settings_controller_test.exs:24
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422332@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       (favorite 0.1.0) test/support/conn_case.ex:48: FavoriteWeb.ConnCase.register_and_log_in_user/1
       test/favorite_web/controllers/user_settings_controller_test.exs:1: FavoriteWeb.UserSettingsControllerTest.__ex_unit__/2



 40) test GET /users/settings/confirm_email/:token does not update email with invalid token (FavoriteWeb.UserSettingsControllerTest)
     test/favorite_web/controllers/user_settings_controller_test.exs:116
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422300@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       (favorite 0.1.0) test/support/conn_case.ex:48: FavoriteWeb.ConnCase.register_and_log_in_user/1
       test/favorite_web/controllers/user_settings_controller_test.exs:1: FavoriteWeb.UserSettingsControllerTest.__ex_unit__/2



 41) test GET /users/settings redirects if user is not logged in (FavoriteWeb.UserSettingsControllerTest)
     test/favorite_web/controllers/user_settings_controller_test.exs:16
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422268@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       (favorite 0.1.0) test/support/conn_case.ex:48: FavoriteWeb.ConnCase.register_and_log_in_user/1
       test/favorite_web/controllers/user_settings_controller_test.exs:1: FavoriteWeb.UserSettingsControllerTest.__ex_unit__/2



 42) test GET /users/settings renders settings page (FavoriteWeb.UserSettingsControllerTest)
     test/favorite_web/controllers/user_settings_controller_test.exs:10
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422495@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       (favorite 0.1.0) test/support/conn_case.ex:48: FavoriteWeb.ConnCase.register_and_log_in_user/1
       test/favorite_web/controllers/user_settings_controller_test.exs:1: FavoriteWeb.UserSettingsControllerTest.__ex_unit__/2



 43) test PUT /users/settings (change email form) updates the user email (FavoriteWeb.UserSettingsControllerTest)
     test/favorite_web/controllers/user_settings_controller_test.exs:64
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422236@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       (favorite 0.1.0) test/support/conn_case.ex:48: FavoriteWeb.ConnCase.register_and_log_in_user/1
       test/favorite_web/controllers/user_settings_controller_test.exs:1: FavoriteWeb.UserSettingsControllerTest.__ex_unit__/2



 44) test GET /users/settings/confirm_email/:token updates the user email once (FavoriteWeb.UserSettingsControllerTest)
     test/favorite_web/controllers/user_settings_controller_test.exs:104
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422621@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       (favorite 0.1.0) test/support/conn_case.ex:48: FavoriteWeb.ConnCase.register_and_log_in_user/1
       test/favorite_web/controllers/user_settings_controller_test.exs:1: FavoriteWeb.UserSettingsControllerTest.__ex_unit__/2



 45) test PUT /users/settings (change email form) does not update email on invalid data (FavoriteWeb.UserSettingsControllerTest)
     test/favorite_web/controllers/user_settings_controller_test.exs:77
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422589@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       (favorite 0.1.0) test/support/conn_case.ex:48: FavoriteWeb.ConnCase.register_and_log_in_user/1
       test/favorite_web/controllers/user_settings_controller_test.exs:1: FavoriteWeb.UserSettingsControllerTest.__ex_unit__/2



 46) test PUT /users/settings (change password form) does not update password on invalid data (FavoriteWeb.UserSettingsControllerTest)
     test/favorite_web/controllers/user_settings_controller_test.exs:41
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422557@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       (favorite 0.1.0) test/support/conn_case.ex:48: FavoriteWeb.ConnCase.register_and_log_in_user/1
       test/favorite_web/controllers/user_settings_controller_test.exs:1: FavoriteWeb.UserSettingsControllerTest.__ex_unit__/2



 47) test GET /users/settings/confirm_email/:token redirects if user is not logged in (FavoriteWeb.UserSettingsControllerTest)
     test/favorite_web/controllers/user_settings_controller_test.exs:123
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422525@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       (favorite 0.1.0) test/support/conn_case.ex:48: FavoriteWeb.ConnCase.register_and_log_in_user/1
       test/favorite_web/controllers/user_settings_controller_test.exs:1: FavoriteWeb.UserSettingsControllerTest.__ex_unit__/2

..

 48) test POST /users/register creates account and logs the user in (FavoriteWeb.UserRegistrationControllerTest)
     test/favorite_web/controllers/user_registration_controller_test.exs:23
     Expected truthy, got nil
     code: assert get_session(conn, :user_token)
     arguments:

         # 1
         %Plug.Conn{
           adapter: {Plug.Adapters.Test.Conn, :...},
           assigns: %{
             changeset: #Ecto.Changeset<
               action: :insert,
               changes: %{email: "user-576460752303423101@example.com", password: "**redacted**"},
               errors: [
                 login: {"can't be blank", [validation: :required]},
                 name: {"can't be blank", [validation: :required]}
               ],
               data: #Favorite.Accounts.User<>,
               valid?: false
             >,
             current_user: nil,
             layout: {FavoriteWeb.LayoutView, "app.html"}
           },
           body_params: %{"user" => %{"email" => "user-576460752303423101@example.com", "password" => "hello world!"}},
           cookies: %{
             "_favorite_key" => "SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYQ1Z2MjlnNWFUVUh0elllZVhUcmJlbThY.iE-ztUO-X2ghGPMbSar13GB-Z7PQ6Mj9sa5P0JntmFY"
           },
           halted: false,
           host: "www.example.com",
           method: "POST",
           owner: #PID<0.479.0>,
           params: %{"user" => %{"email" => "user-576460752303423101@example.com", "password" => "hello world!"}},
           path_info: ["users", "register"],
           path_params: %{},
           port: 80,
           private: %{
             FavoriteWeb.Router => {[], %{}},
             :before_send => [#Function<0.63721220/1 in Plug.CSRFProtection.call/2>,
              #Function<2.9022821/1 in Phoenix.Controller.fetch_flash/2>,
              #Function<0.323658/1 in Plug.Session.before_send/2>, #Function<0.20582249/1 in Plug.Telemetry.call/2>],
             :phoenix_action => :create,
             :phoenix_controller => FavoriteWeb.UserRegistrationController,
             :phoenix_endpoint => FavoriteWeb.Endpoint,
             :phoenix_flash => %{},
             :phoenix_format => "html",
             :phoenix_layout => {FavoriteWeb.LayoutView, :app},
             :phoenix_recycled => false,
             :phoenix_request_logger => {"request_logger", "request_logger"},
             :phoenix_root_layout => {FavoriteWeb.LayoutView, :root},
             :phoenix_router => FavoriteWeb.Router,
             :phoenix_template => "new.html",
             :phoenix_view => FavoriteWeb.UserRegistrationView,
             :plug_session => %{"_csrf_token" => "CVv29g5aTUHtzYeeXTrbem8X"},
             :plug_session_fetch => :done,
             :plug_session_info => :write,
             :plug_skip_csrf_protection => true
           },
           query_params: %{},
           query_string: "",
           remote_ip: {127, 0, 0, 1},
           req_cookies: %{},
           req_headers: [{"content-type", "multipart/mixed; boundary=plug_conn_test"}],
           request_path: "/users/register",
           resp_body: "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<meta content=\"DAM1XEM_WgoEHyc-Qj5WUxU1HSkXPWs7OUCnzXokPJoJ8g36MaoKrPSc\" name=\"csrf-token\">\n<title data-suffix=\" · Phoenix Framework\">Favorite · Phoenix Framework</title>\n    <link phx-track-static rel=\"stylesheet\" href=\"/assets/app.css\">\n    <script defer phx-track-static type=\"text/javascript\" src=\"/assets/app.js\"></script>\n  </head>\n  <body>\n    <header>\n      <section class=\"container\">\n        <nav>\n          <ul>\n            <li><a href=\"https://hexdocs.pm/phoenix/overview.html\">Sign up</a></li>\n<!--            -->\n<!--              <li><a href=\"/dashboard\">LiveDashboard</a></li>-->\n<!--            -->\n          </ul>\n<ul>\n\n  <li><a href=\"/users/register\">Register</a></li>\n  <li><a href=\"/users/log_in\">Log in</a></li>\n\n</ul>\n        </nav>\n        <a href=\"/\" class=\"brand-logo\">\n          Favorite\n        </a>\n      </section>\n    </header>\n<main class=\"container\">\n  <p class=\"alert alert-info\" role=\"alert\"></p>\n  <p class=\"alert alert-danger\" role=\"alert\"></p>\n<h1>Register</h1>\n\n<form action=\"/users/register\" method=\"post\">\n  \n  \n    <input name=\"_csrf_token\" type=\"hidden\" value=\"DAM1XEM_WgoEHyc-Qj5WUxU1HSkXPWs7OUCnzXokPJoJ8g36MaoKrPSc\">\n  \n  \n\n    <div class=\"alert alert-danger\">\n      <p>Oops, something went wrong! Please check the errors below.</p>\n    </div>\n\n<label for=\"user_email\">Email</label>\n<input id=\"user_email\" name=\"user[email]\" required type=\"email\" value=\"user-576460752303423101@example.com\">\n\n<label for=\"user_password\">Password</label>\n<input id=\"user_password\" name=\"user[password]\" required type=\"password\">\n\n  <div>\n<button type=\"submit\">Register</button>\n  </div>\n\n</form>\n\n<p>\n<a href=\"/users/log_in\">Log in</a> |\n<a href=\"/users/reset_password\">Forgot your password?</a>\n</p>\n</main>\n  </body>\n</html>",
           resp_cookies: %{
             "_favorite_key" => %{
               value: "SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYQ1Z2MjlnNWFUVUh0elllZVhUcmJlbThY.iE-ztUO-X2ghGPMbSar13GB-Z7PQ6Mj9sa5P0JntmFY"
             }
           },
           resp_headers: [
             {"set-cookie",
              "_favorite_key=SFMyNTY.g3QAAAABbQAAAAtfY3NyZl90b2tlbm0AAAAYQ1Z2MjlnNWFUVUh0elllZVhUcmJlbThY.iE-ztUO-X2ghGPMbSar13GB-Z7PQ6Mj9sa5P0JntmFY; path=/; HttpOnly"},
             {"content-type", "text/html; charset=utf-8"},
             {"cache-control", "max-age=0, private, must-revalidate"},
             {"x-request-id", "FwJ9t6p16t0tf70AAALj"},
             {"x-frame-options", "SAMEORIGIN"},
             {"x-xss-protection", "1; mode=block"},
             {"x-content-type-options", "nosniff"},
             {"x-download-options", "noopen"},
             {"x-permitted-cross-domain-policies", "none"},
             {"cross-origin-window-policy", "deny"}
           ],
           scheme: :http,
           script_name: [],
           secret_key_base: :...,
           state: :sent,
           status: 200
         }

         # 2
         :user_token

     stacktrace:
       test/favorite_web/controllers/user_registration_controller_test.exs:31: (test)



 49) test GET /users/register redirects if already logged in (FavoriteWeb.UserRegistrationControllerTest)
     test/favorite_web/controllers/user_registration_controller_test.exs:15
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422493@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     code: conn = conn |> log_in_user(user_fixture()) |> get(Routes.user_registration_path(conn, :new))
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite_web/controllers/user_registration_controller_test.exs:16: (test)

.

 50) test POST /users/register render errors for invalid data (FavoriteWeb.UserRegistrationControllerTest)
     test/favorite_web/controllers/user_registration_controller_test.exs:42
     Assertion with =~ failed
     code:  assert response =~ "should be at least 12 character"
     left:  "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<meta content=\"D3YPKEkleDgPDFsnBCYcFxcAHgE-CS4PfNwz0_7bgM6sEHjRAwz5Sma7\" name=\"csrf-token\">\n<title data-suffix=\" · Phoenix Framework\">Favorite · Phoenix Framework</title>\n    <link phx-track-static rel=\"stylesheet\" href=\"/assets/app.css\">\n    <script defer phx-track-static type=\"text/javascript\" src=\"/assets/app.js\"></script>\n  </head>\n  <body>\n    <header>\n      <section class=\"container\">\n        <nav>\n          <ul>\n            <li><a href=\"https://hexdocs.pm/phoenix/overview.html\">Sign up</a></li>\n<!--            -->\n<!--              <li><a href=\"/dashboard\">LiveDashboard</a></li>-->\n<!--            -->\n          </ul>\n<ul>\n\n  <li><a href=\"/users/register\">Register</a></li>\n  <li><a href=\"/users/log_in\">Log in</a></li>\n\n</ul>\n        </nav>\n        <a href=\"/\" class=\"brand-logo\">\n          Favorite\n        </a>\n      </section>\n    </header>\n<main class=\"container\">\n  <p class=\"alert alert-info\" role=\"alert\"></p>\n  <p class=\"alert alert-danger\" role=\"alert\"></p>\n<h1>Register</h1>\n\n<form action=\"/users/register\" method=\"post\">\n  \n  \n    <input name=\"_csrf_token\" type=\"hidden\" value=\"D3YPKEkleDgPDFsnBCYcFxcAHgE-CS4PfNwz0_7bgM6sEHjRAwz5Sma7\">\n  \n  \n\n    <div class=\"alert alert-danger\">\n      <p>Oops, something went wrong! Please check the errors below.</p>\n    </div>\n\n<label for=\"user_email\">Email</label>\n<input id=\"user_email\" name=\"user[email]\" required type=\"email\" value=\"with spaces\">\n<span class=\"invalid-feedback\" phx-feedback-for=\"user[email]\">must have the @ sign and no spaces</span>\n<label for=\"user_password\">Password</label>\n<input id=\"user_password\" name=\"user[password]\" required type=\"password\">\n\n  <div>\n<button type=\"submit\">Register</button>\n  </div>\n\n</form>\n\n<p>\n<a href=\"/users/log_in\">Log in</a> |\n<a href=\"/users/reset_password\">Forgot your password?</a>\n</p>\n</main>\n  </body>\n</html>"
     right: "should be at least 12 character"
     stacktrace:
       test/favorite_web/controllers/user_registration_controller_test.exs:51: (test)

.

 51) test get_user_by_session_token/1 returns user by token (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:341
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422429@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite/accounts_test.exs:336: Favorite.AccountsTest.__ex_unit_setup_6/1
       test/favorite/accounts_test.exs:1: Favorite.AccountsTest.__ex_unit__/2



 52) test update_user_password/3 updates the password (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:291
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422463@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite/accounts_test.exs:259: Favorite.AccountsTest.__ex_unit_setup_4/1
       test/favorite/accounts_test.exs:1: Favorite.AccountsTest.__ex_unit__/2



 53) test register_user/1 validates email and password when given (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:61
     match (=) failed
     code:  assert %{email: ["must have the @ sign and no spaces"], password: ["should be at least 12 character(s)"]} = errors_on(changeset)
     left:  %{email: ["must have the @ sign and no spaces"], password: ["should be at least 12 character(s)"]}
     right: %{email: ["must have the @ sign and no spaces"], login: ["can't be blank"], name: ["can't be blank"]}
     stacktrace:
       test/favorite/accounts_test.exs:64: (test)



 54) test apply_user_email/3 validates maximum value for email for security (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:144
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422431@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite/accounts_test.exs:129: Favorite.AccountsTest.__ex_unit_setup_1/1
       test/favorite/accounts_test.exs:1: Favorite.AccountsTest.__ex_unit__/2

.

 55) test update_user_password/3 deletes all tokens for the given user (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:301
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303423198@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite/accounts_test.exs:259: Favorite.AccountsTest.__ex_unit_setup_4/1
       test/favorite/accounts_test.exs:1: Favorite.AccountsTest.__ex_unit__/2



 56) test update_user_password/3 validates maximum values for password for security (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:275
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303421980@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite/accounts_test.exs:259: Favorite.AccountsTest.__ex_unit_setup_4/1
       test/favorite/accounts_test.exs:1: Favorite.AccountsTest.__ex_unit__/2



 57) test generate_user_session_token/1 generates a token (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:318
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303421948@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite/accounts_test.exs:315: Favorite.AccountsTest.__ex_unit_setup_5/1
       test/favorite/accounts_test.exs:1: Favorite.AccountsTest.__ex_unit__/2



 58) test apply_user_email/3 validates email (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:137
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303421916@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite/accounts_test.exs:129: Favorite.AccountsTest.__ex_unit_setup_1/1
       test/favorite/accounts_test.exs:1: Favorite.AccountsTest.__ex_unit__/2



 59) test change_user_registration/2 allows fields to be set (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:103
     Expected truthy, got false
     code: assert changeset.valid?
     stacktrace:
       test/favorite/accounts_test.exs:113: (test)



 60) test get_user_by_reset_password_token/1 does not return the user with invalid token (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:454
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422397@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite/accounts_test.exs:439: Favorite.AccountsTest.__ex_unit_setup_10/1
       test/favorite/accounts_test.exs:1: Favorite.AccountsTest.__ex_unit__/2



 61) test reset_user_password/2 deletes all tokens for the given user (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:496
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303421820@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite/accounts_test.exs:468: Favorite.AccountsTest.__ex_unit_setup_11/1
       test/favorite/accounts_test.exs:1: Favorite.AccountsTest.__ex_unit__/2



 62) test update_user_email/2 does not update email if user email changed (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:225
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303423166@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite/accounts_test.exs:198: Favorite.AccountsTest.__ex_unit_setup_3/1
       test/favorite/accounts_test.exs:1: Favorite.AccountsTest.__ex_unit__/2



 63) test deliver_update_email_instructions/3 sends token through notification (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:182
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303421788@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite/accounts_test.exs:179: Favorite.AccountsTest.__ex_unit_setup_2/1
       test/favorite/accounts_test.exs:1: Favorite.AccountsTest.__ex_unit__/2

.

 64) test get_user_by_session_token/1 does not return user for expired token (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:350
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303423134@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite/accounts_test.exs:336: Favorite.AccountsTest.__ex_unit_setup_6/1
       test/favorite/accounts_test.exs:1: Favorite.AccountsTest.__ex_unit__/2

.

 65) test apply_user_email/3 requires email to change (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:132
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422367@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite/accounts_test.exs:129: Favorite.AccountsTest.__ex_unit_setup_1/1
       test/favorite/accounts_test.exs:1: Favorite.AccountsTest.__ex_unit__/2



 66) test update_user_password/3 validates password (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:262
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303421756@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite/accounts_test.exs:259: Favorite.AccountsTest.__ex_unit_setup_4/1
       test/favorite/accounts_test.exs:1: Favorite.AccountsTest.__ex_unit__/2



 67) test delete_session_token/1 deletes the token (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:357
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303423102@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     code: user = user_fixture()
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite/accounts_test.exs:358: (test)



 68) test get_user_by_email_and_password/2 returns the user if the email and password are valid (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:30
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422335@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     code: %{id: id} = user = user_fixture()
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite/accounts_test.exs:31: (test)



 69) test apply_user_email/3 validates email uniqueness (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:153
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303423070@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite/accounts_test.exs:129: Favorite.AccountsTest.__ex_unit_setup_1/1
       test/favorite/accounts_test.exs:1: Favorite.AccountsTest.__ex_unit__/2



 70) test apply_user_email/3 applies the email without persisting it (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:169
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303423038@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite/accounts_test.exs:129: Favorite.AccountsTest.__ex_unit_setup_1/1
       test/favorite/accounts_test.exs:1: Favorite.AccountsTest.__ex_unit__/2



 71) test update_user_email/2 does not update email with invalid token (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:219
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422365@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite/accounts_test.exs:198: Favorite.AccountsTest.__ex_unit_setup_3/1
       test/favorite/accounts_test.exs:1: Favorite.AccountsTest.__ex_unit__/2



 72) test get_user_by_reset_password_token/1 returns the user with valid token (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:449
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303423006@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite/accounts_test.exs:439: Favorite.AccountsTest.__ex_unit_setup_10/1
       test/favorite/accounts_test.exs:1: Favorite.AccountsTest.__ex_unit__/2



 73) test deliver_user_reset_password_instructions/2 sends token through notification (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:423
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422974@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite/accounts_test.exs:420: Favorite.AccountsTest.__ex_unit_setup_9/1
       test/favorite/accounts_test.exs:1: Favorite.AccountsTest.__ex_unit__/2



 74) test update_user_password/3 validates current password (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:284
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422942@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite/accounts_test.exs:259: Favorite.AccountsTest.__ex_unit_setup_4/1
       test/favorite/accounts_test.exs:1: Favorite.AccountsTest.__ex_unit__/2



 75) test apply_user_email/3 validates current password (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:162
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303421724@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite/accounts_test.exs:129: Favorite.AccountsTest.__ex_unit_setup_1/1
       test/favorite/accounts_test.exs:1: Favorite.AccountsTest.__ex_unit__/2



 76) test reset_user_password/2 validates password (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:471
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422303@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite/accounts_test.exs:468: Favorite.AccountsTest.__ex_unit_setup_11/1
       test/favorite/accounts_test.exs:1: Favorite.AccountsTest.__ex_unit__/2



 77) test deliver_user_confirmation_instructions/2 sends token through notification (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:370
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422271@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite/accounts_test.exs:367: Favorite.AccountsTest.__ex_unit_setup_7/1
       test/favorite/accounts_test.exs:1: Favorite.AccountsTest.__ex_unit__/2



 78) test reset_user_password/2 updates the password (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:490
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303421692@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite/accounts_test.exs:468: Favorite.AccountsTest.__ex_unit_setup_11/1
       test/favorite/accounts_test.exs:1: Favorite.AccountsTest.__ex_unit__/2



 79) test change_user_registration/2 returns a changeset (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:98
     Assertion with == failed
     code:  assert changeset.required == [:password, :email]
     left:  [:password, :email, :login, :name]
     right: [:password, :email]
     stacktrace:
       test/favorite/accounts_test.exs:100: (test)



 80) test register_user/1 registers users with a hashed password (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:87
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422239@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     code: {:ok, user} = Accounts.register_user(valid_user_attributes(email: email))
     stacktrace:
       test/favorite/accounts_test.exs:89: (test)



 81) test get_user_by_email_and_password/2 does not return the user if the password is not valid (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:25
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303421660@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     code: user = user_fixture()
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite/accounts_test.exs:26: (test)

.

 82) test reset_user_password/2 validates maximum values for password for security (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:484
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303421628@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite/accounts_test.exs:468: Favorite.AccountsTest.__ex_unit_setup_11/1
       test/favorite/accounts_test.exs:1: Favorite.AccountsTest.__ex_unit__/2



 83) test register_user/1 validates email uniqueness (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:77
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303421596@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     code: %{email: email} = user_fixture()
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite/accounts_test.exs:78: (test)



 84) test get_user_by_email/1 returns the user if the email exists (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:14
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303421564@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     code: %{id: id} = user = user_fixture()
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite/accounts_test.exs:15: (test)



 85) test get_user_by_email/1 does not return the user if the email does not exist (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:10
     ** (UndefinedFunctionError) function Favorite.Accounts.get_user_by_email/1 is undefined or private. Did you mean:
     
           * change_user_email/1
           * change_user_email/2
           * get_user_by_login/1
           * get_user_by_session_token/1
           * update_user_email/2
     
     code: refute Accounts.get_user_by_email("unknown@example.com")
     stacktrace:
       (favorite 0.1.0) Favorite.Accounts.get_user_by_email("unknown@example.com")
       test/favorite/accounts_test.exs:11: (test)



 86) test update_user_email/2 updates the email with a valid token (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:209
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422333@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite/accounts_test.exs:198: Favorite.AccountsTest.__ex_unit_setup_3/1
       test/favorite/accounts_test.exs:1: Favorite.AccountsTest.__ex_unit__/2



 87) test get_user_by_email_and_password/2 does not return the user if the email does not exist (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:21
     ** (UndefinedFunctionError) function Favorite.Accounts.get_user_by_email_and_password/2 is undefined or private. Did you mean:
     
           * get_user_by_login/1
           * get_user_by_login_and_password/2
           * get_user_by_reset_password_token/1
     
     code: refute Accounts.get_user_by_email_and_password("unknown@example.com", "hello world!")
     stacktrace:
       (favorite 0.1.0) Favorite.Accounts.get_user_by_email_and_password("unknown@example.com", "hello world!")
       test/favorite/accounts_test.exs:22: (test)



 88) test get_user_by_reset_password_token/1 does not return the user if token expired (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:459
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422301@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite/accounts_test.exs:439: Favorite.AccountsTest.__ex_unit_setup_10/1
       test/favorite/accounts_test.exs:1: Favorite.AccountsTest.__ex_unit__/2



 89) test confirm_user/1 confirms the email with a valid token (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:396
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422269@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite/accounts_test.exs:386: Favorite.AccountsTest.__ex_unit_setup_8/1
       test/favorite/accounts_test.exs:1: Favorite.AccountsTest.__ex_unit__/2



 90) test get_user_by_session_token/1 does not return user for invalid token (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:346
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422237@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite/accounts_test.exs:336: Favorite.AccountsTest.__ex_unit_setup_6/1
       test/favorite/accounts_test.exs:1: Favorite.AccountsTest.__ex_unit__/2



 91) test get_user!/1 returns the user with the given id (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:45
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422205@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     code: %{id: id} = user = user_fixture()
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite/accounts_test.exs:46: (test)



 92) test confirm_user/1 does not confirm email if token expired (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:410
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303421532@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite/accounts_test.exs:386: Favorite.AccountsTest.__ex_unit_setup_8/1
       test/favorite/accounts_test.exs:1: Favorite.AccountsTest.__ex_unit__/2

..

 93) test confirm_user/1 does not confirm with invalid token (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:404
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303421500@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite/accounts_test.exs:386: Favorite.AccountsTest.__ex_unit_setup_8/1
       test/favorite/accounts_test.exs:1: Favorite.AccountsTest.__ex_unit__/2



 94) test update_user_email/2 does not update email if token expired (Favorite.AccountsTest)
     test/favorite/accounts_test.exs:231
     ** (MatchError) no match of right hand side value: {:error, #Ecto.Changeset<action: :insert, changes: %{email: "user-576460752303422173@example.com", password: "**redacted**"}, errors: [login: {"can't be blank", [validation: :required]}, name: {"can't be blank", [validation: :required]}], data: #Favorite.Accounts.User<>, valid?: false>}
     stacktrace:
       (favorite 0.1.0) test/support/fixtures/accounts_fixtures.ex:18: Favorite.AccountsFixtures.user_fixture/1
       test/favorite/accounts_test.exs:198: Favorite.AccountsTest.__ex_unit_setup_3/1
       test/favorite/accounts_test.exs:1: Favorite.AccountsTest.__ex_unit__/2



 95) test GET / (FavoriteWeb.PageControllerTest)
     test/favorite_web/controllers/page_controller_test.exs:4
     Assertion with =~ failed
     code:  assert html_response(conn, 200) =~ "Welcome to Phoenix!"
     left:  "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<meta content=\"CTtjRmphYiMaFzRpIhAbKw9mGxpJVwd9AY1wG06hhmnZCwQtN0hx0nED\" name=\"csrf-token\">\n<title data-suffix=\" · Phoenix Framework\">Favorite · Phoenix Framework</title>\n    <link phx-track-static rel=\"stylesheet\" href=\"/assets/app.css\">\n    <script defer phx-track-static type=\"text/javascript\" src=\"/assets/app.js\"></script>\n  </head>\n  <body>\n    <header>\n      <section class=\"container\">\n        <nav>\n          <ul>\n            <li><a href=\"https://hexdocs.pm/phoenix/overview.html\">Sign up</a></li>\n<!--            -->\n<!--              <li><a href=\"/dashboard\">LiveDashboard</a></li>-->\n<!--            -->\n          </ul>\n<ul>\n\n  <li><a href=\"/users/register\">Register</a></li>\n  <li><a href=\"/users/log_in\">Log in</a></li>\n\n</ul>\n        </nav>\n        <a href=\"/\" class=\"brand-logo\">\n          Favorite\n        </a>\n      </section>\n    </header>\n<main class=\"container\">\n  <p class=\"alert alert-info\" role=\"alert\"></p>\n  <p class=\"alert alert-danger\" role=\"alert\"></p>\n<section class=\"phx-hero\">\n  <h1>Welcome to Favorite!</h1>\n  <p>A place to show off your favorite movies</p>\n</section>\n\nStart looking at other people pages and then sign up and create one for yourself!\n\n\n</main>\n  </body>\n</html>"
     right: "Welcome to Phoenix!"
     stacktrace:
       test/favorite_web/controllers/page_controller_test.exs:6: (test)



Finished in 0.6 seconds (0.5s async, 0.05s sync)
105 tests, 95 failures

Randomized with seed 334552
